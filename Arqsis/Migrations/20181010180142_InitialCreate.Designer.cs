// <auto-generated />
using System;
using Arqsis.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Arqsis.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20181010180142_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview1-35029")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Arqsis.Model.Category.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid?>("ParentId");

                    b.HasKey("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Arqsis.Model.Finish.Finish", b =>
                {
                    b.Property<Guid>("FinishId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("FinishId");

                    b.ToTable("Finishes");
                });

            modelBuilder.Entity("Arqsis.Model.Product.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FinishId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("FinishId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Arqsis.Model.Restriction.Restriction", b =>
                {
                    b.Property<Guid>("RestrictionId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BaseProductId");

                    b.Property<Guid>("CompatibleProductId");

                    b.HasKey("RestrictionId");

                    b.HasIndex("BaseProductId");

                    b.HasIndex("CompatibleProductId");

                    b.ToTable("Restrictions");
                });

            modelBuilder.Entity("Arqsis.Model.Category.Category", b =>
                {
                    b.HasOne("Arqsis.Model.Category.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Arqsis.Model.Product.Product", b =>
                {
                    b.HasOne("Arqsis.Model.Finish.Finish", "Finish")
                        .WithMany()
                        .HasForeignKey("FinishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("Arqsis.Model.Dimension.Dimension", "Dimension", b1 =>
                        {
                            b1.Property<Guid>("ProductId");

                            b1.Property<int>("MaxDepthInMillimeters")
                                .HasColumnName("MaxDepthInMillimeters");

                            b1.Property<int>("MaxHeightInMillimeters")
                                .HasColumnName("MaxHeightInMillimeters");

                            b1.Property<int>("MaxWeightInMillimeters")
                                .HasColumnName("MaxWeightInMillimeters");

                            b1.Property<int>("MinDepthInMillimeters")
                                .HasColumnName("MinDepthInMillimeters");

                            b1.Property<int>("MinHeightInMillimeters")
                                .HasColumnName("MinHeightInMillimeters");

                            b1.Property<int>("MinWeightInMillimeters")
                                .HasColumnName("MinWeightInMillimeters");

                            b1.ToTable("Products");

                            b1.HasOne("Arqsis.Model.Product.Product")
                                .WithOne("Dimension")
                                .HasForeignKey("Arqsis.Model.Dimension.Dimension", "ProductId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Arqsis.Model.Restriction.Restriction", b =>
                {
                    b.HasOne("Arqsis.Model.Product.Product", "BaseProduct")
                        .WithMany()
                        .HasForeignKey("BaseProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Arqsis.Model.Product.Product", "CompatibleProduct")
                        .WithMany()
                        .HasForeignKey("CompatibleProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
